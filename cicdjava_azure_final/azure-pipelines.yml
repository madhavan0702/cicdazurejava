trigger:
  - main   # pipeline runs when code is pushed to the 'main' branch

# Use self-hosted or Microsoft-hosted agent
pool:
  vmImage: 'ubuntu-latest'   # change to Default if youâ€™re using self-hosted agent

variables:
  ACR_NAME: 'cicdregistry'                       # ðŸ”¹ your Azure Container Registry name
  ACR_LOGIN_SERVER: 'cicdregistry.azurecr.io'    # ðŸ”¹ ACR login server (from Azure Portal â†’ ACR â†’ Overview)
  IMAGE_NAME: 'cicdjava'
  TAG: '$(Build.BuildId)'
  AZURE_WEBAPP_NAME: 'cicdjava-app'              # ðŸ”¹ your Web App for Containers name
  AZURE_RESOURCE_GROUP: 'cicd-rg'                # ðŸ”¹ your Resource Group name
  AZURE_SERVICE_CONNECTION: 'My-Azure-Connection' # ðŸ”¹ exact service connection name in DevOps

steps:
# Step 1: Build Java project with Maven
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package -DskipTests=false'
    options: '-B'
  displayName: 'Build Java project'

# Step 2: List build artifacts (optional for debug)
- script: |
    echo "Build finished. Listing artifacts..."
    ls -l target
  displayName: 'List build artifacts'

# Step 3: Build and push Docker image to ACR
- task: Docker@2
  inputs:
    containerRegistry: '$(AZURE_SERVICE_CONNECTION)'
